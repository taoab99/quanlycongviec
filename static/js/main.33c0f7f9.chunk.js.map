{"version":3,"sources":["constans/actiontypes.js","action/index.js","components/add.js","components/controls.js","components/item.js","components/listitems.js","App.js","reportWebVitals.js","reducer/taks.js","reducer/iscomplate.js","reducer/edititems.js","reducer/filter.js","reducer/filtercontrol.js","reducer/sort.js","reducer/index.js","index.js"],"names":["LIST_ALL","ADD_TARK","TOGLE_FORM","OPEN_FORM","CLOSE_FORM","UPDATE_FORM","DELETE_FORM","UPDATE_ITEM","FILTER_TABLE","CONTROL","SORT","openform","tark","type","types","edititem","Additems","onCloseForm","props","oncloseform","onsubmit","event","preventDefault","onClear","onchanges","taget","target","name","value","setState","luulai","onaddTark","state","id","status","this","tarkedit","nextProps","className","onSubmit","onChange","onClick","Component","connect","editting","dispatch","task","Controls","hienthi","edititems","onopenform","ontoggleform","console","log","onedit","onsearch","onfiltercontrol","keyword","toLocaleLowerCase","sorby","sortvalue","onsort","by","hideorshow","onset","bind","placeholder","actions","sort","Item","changes","onUpdateStatus","VaLue","onUpdate","ondelete","onDelete","Listitems","onchange","filter","fillterName","parseInt","fillterStatus","onfilter","tasks","taks","fillter","toLowerCase","indexOf","a","b","element","map","item","index","controfilter","App","localStorage","getItem","taa","JSON","parse","iscomplate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setid","Math","random","getId","findindex","resul","forEach","data","initialState","myReducer","action","newTark","push","setItem","stringify","splice","combineReducers","filtertable","store","createStore","myReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33c0f7f9.chunk.js","sourcesContent":["export const LIST_ALL = 'LIST_ALL';\r\nexport const ADD_TARK = 'ADD_TARK';\r\nexport const TOGLE_FORM = 'TOGLE_FORM';\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const UPDATE_FORM = 'UPDATE_FORM';\r\nexport const DELETE_FORM = 'DELETE_FORM';\r\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\r\nexport const FILTER_TABLE = 'FILTER_TABLE';\r\nexport const CONTROL = 'CONTROL';\r\nexport const SORT = 'SORT';","import * as types from '../constans/actiontypes';\r\nexport const listAll = ()=>{\r\n    return {\r\n        type:types.LIST_ALL\r\n    };\r\n}\r\nexport const addtark= (tark)=>{\r\n    return {\r\n        type:types.ADD_TARK,\r\n        tark:tark\r\n    };\r\n}\r\nexport const togleform= ()=>{\r\n    return {\r\n        type:types.TOGLE_FORM,\r\n    };\r\n}\r\n\r\nexport const openform= (tark)=>{\r\n    return {\r\n        type:types.OPEN_FORM,\r\n    };\r\n}\r\nexport const closeform= (tark)=>{\r\n    return {\r\n        type:types.CLOSE_FORM,\r\n    };\r\n}\r\nexport const onupdatestatus= (id)=>{\r\n    return {\r\n        type:types.UPDATE_FORM,\r\n        id\r\n    };\r\n}\r\n\r\nexport const ondelete= (id)=>{\r\n    return {\r\n        type:types.DELETE_FORM,\r\n        id\r\n    };\r\n}\r\nexport const edititem =(tark)=>{\r\n    return{\r\n        type: types.UPDATE_ITEM,\r\n        tark\r\n    };\r\n}\r\nexport const filtertable =(filter)=>{\r\n    return{\r\n        type : types.FILTER_TABLE,\r\n        filter\r\n    }\r\n    \r\n\r\n}\r\nexport const filtercontrol =(keyword)=>{\r\n    return{\r\n        type : types.CONTROL,\r\n        keyword\r\n    }\r\n    \r\n\r\n}\r\nexport const sort =(sort)=>{\r\n    return{\r\n        type : types.SORT,\r\n        sort\r\n    }\r\n    \r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../action/index';\r\n\r\n\r\nclass Additems extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      id:'',\r\n      name: '',\r\n      status: false\r\n    };\r\n  }\r\n  // hiển thị state khi click vào update\r\n  componentWillMount(){\r\n    if(this.props.tarkedit.id !== null){\r\n      this.setState({\r\n        id: this.props.tarkedit.id,\r\n        name: this.props.tarkedit.name,\r\n        status: this.props.tarkedit.status,\r\n  \r\n      });\r\n    }else{\r\n      this.onClear();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.tarkedit){\r\n      this.setState({\r\n        id: nextProps.tarkedit.id,\r\n        name: nextProps.tarkedit.name,\r\n        status: nextProps.tarkedit.status,\r\n  \r\n      });\r\n    }else{\r\n      this.setState({\r\n        id:'',\r\n        name: '',\r\n        status: false\r\n  \r\n      });\r\n    }\r\n  }\r\n\r\n  // đóng form\r\n  onCloseForm=()=>{\r\n    this.props.oncloseform();\r\n  }\r\n  onsubmit=(event)=>{\r\n    event.preventDefault();\r\n    this.onClear();\r\n    this.onCloseForm();\r\n  }\r\n\r\n  onchanges=(event)=>{\r\n    var taget = event.target;\r\n    var name = taget.name;\r\n    var value = taget.value;\r\n    if(name === 'status'){\r\n      var value = taget.value === 'true' ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  luulai=()=>{\r\n    this.props.onaddTark(this.state);\r\n    this.onClear();\r\n  }\r\n\r\n  onClear=()=>{\r\n    this.setState({\r\n      id:'',\r\n      name: '',\r\n      status: false\r\n    });\r\n  }\r\n  render(){\r\n    var { id } = this.state;\r\n    return (\r\n          <div className=\"additem pd boder\">\r\n            <div className=\"header\">\r\n                <p>{id == '' ? 'thêm công việc' : 'cập nhật công việc'}</p>\r\n            </div>\r\n\r\n            <div className=\"conten\">\r\n\r\n            <form onSubmit={this.onsubmit}>\r\n                <label>\r\n                  <b>Ten:</b>\r\n                </label>\r\n                <input \r\n                  className=\"inputwidth\" \r\n                  type='text'\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onchanges}\r\n                  ></input>\r\n\r\n                <label>\r\n                    <b>Trang thai:</b>\r\n                </label>\r\n                <select \r\n                  className=\"inputwidth\"\r\n                  name=\"status\"\r\n                  value={this.state.status}\r\n                  onChange={this.onchanges}\r\n                  >\r\n                    <option value={true}>kich hoat</option>\r\n                    <option value={false}>an</option>\r\n                </select>\r\n                <div className=\"mg\">\r\n                    <button \r\n                      className=\"bnt-orange\"\r\n                      onClick={this.luulai}\r\n                      >Luu Lai</button>\r\n                    <button className=\"bnt-tomato\">Huy Bo</button>\r\n                </div>\r\n            </form>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStatetoprops = state =>{\r\n  return {\r\n    tarkedit: state.editting\r\n  }\r\n};\r\n\r\nconst mapDispatchtoprops = (dispatch, props)=>{\r\n  return {\r\n    onaddTark: (task)=>{\r\n      dispatch(actions.addtark(task));\r\n    },\r\n    oncloseform : ()=>{\r\n      dispatch(actions.closeform());\r\n    }\r\n  }\r\n};\r\nexport default connect(mapStatetoprops, mapDispatchtoprops) (Additems);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../action/index';\r\n\r\n\r\nclass Controls extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      hideorshow: false,\r\n      keyword: ''\r\n    };\r\n    this.onset= this.onset.bind(this);\r\n  }\r\n  onset(){\r\n    this.setState({\r\n      hideorshow: !this.state.hideorshow\r\n    });\r\n  }\r\n  hienthi= ()=>{\r\n    var { edititems } = this.props;\r\n    if(edititems && edititems.id !== ''){\r\n      this.props.onopenform();\r\n    }else{\r\n      this.props.ontoggleform();\r\n      console.log('this.props.edtitems');\r\n    }\r\n    this.props.onedit({\r\n        id : '',\r\n        name : '',\r\n        status : false\r\n      });\r\n   \r\n  }\r\n\r\n  onchanges=(event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onsearch=()=>{\r\n    this.props.onfiltercontrol(this.state.keyword.toLocaleLowerCase());\r\n  }\r\n  // sắp xếp\r\n\r\n  onClick=(sorby, sortvalue)=>{\r\n      this.props.onsort({\r\n        by : sorby,\r\n        value :sortvalue\r\n      });\r\n  }\r\n  render(){\r\n    return (\r\n        <div>\r\n                <div className=\"inputwidth\">\r\n                    <button className=\"bnt-blue\" onClick={this.hienthi}>Them Cong Viec</button>\r\n                </div>\r\n\r\n                <div className=\"dieukhien inputwidth\">\r\n                    <input \r\n                          type=\"text\"\r\n                          name='keyword'\r\n                          value={this.state.keyword}\r\n                          placeholder=\"Nhap vao tu khoa\"\r\n                          onChange={this.onchanges}\r\n                    >\r\n                    </input>\r\n                    <button \r\n                            className=\"bnt-blue\"\r\n                            onClick={this.onsearch}\r\n                            >\r\n                              Tim kiem\r\n                    </button>\r\n                    <button className=\"bnt-blue\" onClick={this.onset}>Sap Xep</button>\r\n                    {\r\n                       this.state.hideorshow && \r\n                          <div className=\"dropdow\">\r\n                            <ul className=\"inputwidth\">\r\n                                <li\r\n                                  onClick={ ()=>this.onClick('name', 1)}\r\n                                >\r\n                                  <a>a-z</a>\r\n                                </li>\r\n\r\n                                <li\r\n                                  onClick={ ()=>this.onClick('name', -1)}\r\n                                  >\r\n                                  <a>z-a</a>\r\n                                </li>\r\n                            </ul>\r\n                          </div>\r\n                     }\r\n                    \r\n                </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateProps =(state)=>{\r\n  return{\r\n   edititems : state.editting\r\n  }\r\n};\r\nconst mapDispatchtoprops = (dispatch, props)=>{\r\n  return{\r\n    ontoggleform : ()=>{\r\n      dispatch(actions.togleform());\r\n    },\r\n    onedit : (tark)=>{\r\n      dispatch(actions.edititem(tark));\r\n  },\r\n  onopenform : ()=>{\r\n    dispatch(actions.openform());\r\n  },\r\n  onfiltercontrol : (keyword)=>{\r\n    dispatch(actions.filtercontrol(keyword));\r\n  },\r\n  onsort(sort){\r\n    dispatch(actions.sort(sort));\r\n  }\r\n\r\n  }\r\n};\r\nexport default connect(mapStateProps, mapDispatchtoprops)(Controls);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../action/index';\r\n\r\nclass Item extends Component{\r\n\r\n    changes=()=>{\r\n        this.props.onUpdateStatus(this.props.VaLue.id);\r\n    }\r\n\r\n    //udate items\r\n\r\n    onUpdate=()=>{\r\n        this.props.onopenform();\r\n        this.props.onedit(this.props.VaLue);\r\n       \r\n    }\r\n\r\n    // delete items trong list\r\n\r\n    ondelete=()=>{\r\n        this.props.onDelete(this.props.VaLue.id)\r\n    }\r\n    render(){\r\n        return(\r\n                <tr>\r\n                    <td>{this.props.id}</td>\r\n                    <td>{this.props.VaLue.name}</td>\r\n                    <td><span \r\n                            className={this.props.VaLue.status === true ? \"bnt-tomato\" : \"bg-green\"}\r\n                            onClick={this.changes}\r\n                            >\r\n                            {this.props.VaLue.status === true ? \"Active\" : \"Ẩn\"}\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <button \r\n                            className=\"bnt-orange\"\r\n                            onClick={this.onUpdate}\r\n                            >Sua</button>\r\n                        <button \r\n                            className=\"bnt-tomato\"\r\n                            onClick={this.ondelete}\r\n                            >Xoa</button>\r\n                    </td>\r\n                </tr>\r\n        )\r\n    }\r\n}\r\nconst mapStateProps =(state)=>{\r\n    return{}\r\n  };\r\n  const mapDispatchtoprops = (dispatch, props)=>{\r\n    return{\r\n      onUpdateStatus : (id)=>{\r\n        dispatch(actions.onupdatestatus(id));\r\n      },\r\n      onDelete : (id)=>{\r\n          dispatch(actions.ondelete(id));\r\n      },\r\n      onopenform : ()=>{\r\n        dispatch(actions.openform());\r\n      },\r\n      onedit : (tark)=>{\r\n          dispatch(actions.edititem(tark));\r\n      }\r\n    };\r\n  };\r\n  export default connect(mapStateProps, mapDispatchtoprops)(Item);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Item from './item';\r\nimport * as actions from './../action/index';\r\n\r\n\r\nclass Listitems extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      fillterName: '',\r\n      fillterStatus: -1 \r\n    };\r\n\r\n  }\r\n  onchange=(event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    var filter = {\r\n      name : name === 'fillterName' ? value : this.state.fillterName,\r\n      status :  parseInt(name === 'fillterStatus' ? value : this.state.fillterStatus)\r\n    }\r\n    this.props.onfilter(filter);\r\n\r\n    this.setState({\r\n      [name]:value\r\n    });\r\n  }\r\n  render(){\r\n    var tasks = this.props.taks;\r\n    var {fillterName, fillterStatus} = this.state;\r\n    var {fillter, keyword, sort} = this.props;\r\n    \r\n  \r\n      if(fillter){\r\n        if(fillter.name){\r\n          tasks = tasks.filter((task)=>{\r\n            return task.name.toLowerCase().indexOf(fillter.name) !== -1;\r\n          });\r\n        }\r\n        tasks = tasks.filter((task)=>{\r\n          if(fillter.status === -1){\r\n            return task ;\r\n          }else{\r\n            return task.status === (fillter.status === 1 ? true : false);\r\n          }\r\n        });\r\n    }\r\n    if(keyword){\r\n      tasks = tasks.filter((task)=>{\r\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\r\n      });\r\n    };\r\n\r\n    if(sort.name === 'name'){\r\n     tasks.sort((a, b)=>{\r\n        if(a.name > b.name){\r\n          return sort.value;\r\n        }else if(a.name < b.name){\r\n          return -sort.value;\r\n        }\r\n        else return 0;\r\n      });\r\n    }\r\n    var element = tasks.map((item, index)=>{\r\n      \r\n      return <Item \r\n                key={index} \r\n                id={index} \r\n                VaLue={item}\r\n                />\r\n      }\r\n    );\r\n   \r\n    return (\r\n             <div className=\"list-items\">\r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                    <th>STT</th>\r\n                    <th>Ten</th>\r\n                    <th>Trang Thai</th>\r\n                    <th>Hanh Dong</th>\r\n                    </tr>\r\n                    <tr>\r\n                    <td></td>\r\n                    <td><input \r\n                              type=\"text\" \r\n                              className=\"inputwidth\"\r\n                              name=\"fillterName\"\r\n                              value={fillterName}\r\n                              onChange={this.onchange}\r\n                              >\r\n\r\n                        </input>\r\n                    </td>\r\n                    <td>\r\n                        <select \r\n                          className=\"inputwidth\"\r\n                          name=\"fillterStatus\"\r\n                          value={fillterStatus}\r\n                          onChange={this.onchange}\r\n                        >\r\n                          <option value={-1}>Tat Ca</option>\r\n                          <option value={0}>An</option>\r\n                          <option value={1}>Hien Thi</option>\r\n                        </select>\r\n                    </td>\r\n                    <td></td>\r\n                    </tr>\r\n                    {element}\r\n                </thead>\r\n                </table>\r\n          </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateProps =(state)=>{\r\n  return{\r\n    taks : state.taks,\r\n    fillter : state.filter,\r\n    keyword : state.controfilter,\r\n    sort : state.sort\r\n  };\r\n};\r\nconst mapDispatchtoprops = (dispatch, props)=>{\r\n  return{\r\n    onfilter : (filter)=>{\r\n      dispatch(actions.filtertable(filter));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateProps, mapDispatchtoprops)(Listitems);","import React, { Component } from 'react';\nimport './App.css';\nimport Additems from './components/add';\nimport Controls from './components/controls';\nimport Listitems from './components/listitems';\nimport { connect } from 'react-redux';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n  }\n  // reset lại thì công việc sẽ lưu vào localStorage và không bị mất đi\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('task')) {\n      var taa = JSON.parse(localStorage.getItem('task'));\n\n      this.setState({\n        tasks: taa\n      })\n    }\n  };\n  render() {\n\n    var { iscomplate } = this.props;\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h2>\n            quản lý công việc\n        </h2>\n        </div>\n\n        {/* noi dung */}\n        <div className=\"container\">\n\n          {\n            iscomplate === true && <Additems />\n          }\n\n          <div className={iscomplate === true ? 'control-item pd boder' : 'control-all pd boder'}>\n            <Controls />\n            <Listitems />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStatetoprops = state => {\n  return {\n    iscomplate: state.iscomplate\n  };\n};\n\nexport default connect(mapStatetoprops, null)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from '../constans/actiontypes';\r\n\r\n // hàm tạo ngẫu nhiên cho hàm tạo id \r\n var setid=()=>{\r\n    return Math.random()\r\n  };\r\n// tạo id cho công việc\r\n  var getId=()=>{\r\n    return setid() + setid() + '-' + setid() + '-' + setid() + '-' + setid() + '-' + setid() + '-' + setid() + '-' + setid();\r\n  };\r\n\r\n  // lap qua taks\r\n\r\n  var findindex =(tasks, id)=>{\r\n    var resul = \"\";\r\n    tasks.forEach((item, index)=>{\r\n        if(item.id === id){\r\n          resul = index;\r\n        }\r\n        return resul;\r\n    });\r\n    return resul;\r\n  };\r\n\r\n\r\nvar data = JSON.parse(localStorage.getItem('task'));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.LIST_ALL:\r\n            return state;\r\n            break;\r\n        case types.ADD_TARK:\r\n          var newTark = {\r\n            id: action.tark.id,\r\n            name: action.tark.name,\r\n            status: action.tark.status\r\n          };\r\n          if(!newTark.id){\r\n            newTark.id = getId()\r\n            state.push(newTark);\r\n          }else{\r\n            var index = findindex(state, newTark.id);\r\n            state[index] = newTark;\r\n          }\r\n            localStorage.setItem('task', JSON.stringify(state));\r\n            return  [...state];\r\n        case types.UPDATE_FORM:\r\n            var index = findindex(state, action.id);\r\n            state[index] = {\r\n              ...state[index],\r\n              status : !state[index].status\r\n            };\r\n            localStorage.setItem('task', JSON.stringify(state));\r\n            return [...state];\r\n          case types.DELETE_FORM:\r\n            var index = findindex(state, action.id);\r\n            state.splice(index, 1);\r\n            localStorage.setItem('task', JSON.stringify(state));\r\n            return [ ...state];\r\n          \r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import * as types from '../constans/actiontypes';\r\nvar initialState = false;\r\n \r\nvar myReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.TOGLE_FORM:\r\n            return !state;\r\n            break;\r\n        case types.OPEN_FORM:\r\n            return true;\r\n        case types.CLOSE_FORM:\r\n            return false;\r\n        case types.OPEN_FORM:\r\n            return true;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import * as types from '../constans/actiontypes';\r\nvar initialState = {\r\n    id : '',\r\n    name : '',\r\n    status : false\r\n};\r\n \r\nvar myReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.UPDATE_ITEM:\r\n            return action.tark;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import * as types from '../constans/actiontypes';\r\nvar initialState = {\r\n    name : '',\r\n    status : -1\r\n};\r\n \r\nvar myReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.FILTER_TABLE:\r\n           var filter = {\r\n               name : action.filter.name,\r\n               status : action.filter.status\r\n           };\r\n            return filter;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import * as types from '../constans/actiontypes';\r\nvar initialState = '';\r\n \r\nvar myReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.CONTROL:\r\n            state = action.keyword;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import * as types from '../constans/actiontypes';\r\nvar initialState = {\r\n    name : 'name',\r\n    value : 1\r\n};\r\n \r\nvar myReducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.SORT:\r\n            // console.log(state);\r\n            return {\r\n                name : action.sort.by,\r\n                value : action.sort.value\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\nimport taks from './taks';\r\nimport iscomplate from './iscomplate';\r\nimport editting from './edititems';\r\nimport filtertable from './filter';\r\nimport controfilter from './filtercontrol';\r\nimport sort from './sort';\r\nconst myReducer = combineReducers({\r\n    taks:taks,\r\n    iscomplate: iscomplate,\r\n    editting:editting,\r\n    filter : filtertable,\r\n    controfilter,\r\n    sort\r\n});\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore}  from 'redux';\nimport myReducers from './reducer/index';\nimport { Provider } from 'react-redux';\nconst store = createStore(myReducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}